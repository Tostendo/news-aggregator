{"version":3,"sources":["components/footer/footer.component.tsx","components/navbar/navbar.component.tsx","components/with-spinner/spinner.component.tsx","utils/date.utils.tsx","components/card/card.component.tsx","components/card-list/card-list.component.tsx","components/search-box/search-box.tsx","components/custom-button/custom-button.component.tsx","components/feed/feed.component.tsx","utils/server.utils.tsx","components/upsert-feed/upsert-feed.component.tsx","App.tsx","index.tsx"],"names":["Footer","className","href","title","Navbar","match","useLocation","getFeedId","pathname","split","length","to","Spinner","formatDate","dateString","d","Date","getDate","getMonth","getFullYear","err","console","error","Card","props","target","rel","message","link","feed_name","author","published","dangerouslySetInnerHTML","__html","summary","CardList","news","map","SearchBox","type","placeholder","onChange","handleSearch","CustomButton","children","Feed","loadData","setState","isLoading","fetchUrl","params","feedId","fetch","then","response","json","allSources","source","label","value","toLowerCase","description","catch","e","searchField","handleSelect","selected","selectedSources","getFilteredResults","state","selectedFeeds","filter","includes","filtered","this","options","labelledBy","overrideStrings","selectSomeItems","allItemsAreSelected","selectAll","search","onClick","Component","withRouter","useState","feeds","setFeeds","feedTitle","setFeedTitle","feedDescription","setFeedDescription","useEffect","getData","method","data","join","rows","url","body","JSON","stringify","history","push","feed_id","upsertData","App","path","render","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8137a6a1.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./footer.styles.scss\";\n\nconst Footer = () => (\n  <div className=\"footer\">\n    <span>\n      Icons erstellt von{\" \"}\n      <a href=\"https://www.flaticon.com/de/autoren/freepik\" title=\"Freepik\">\n        Freepik\n      </a>{\" \"}\n      from{\" \"}\n      <a href=\"https://www.flaticon.com/de/\" title=\"Flaticon\">\n        {\" \"}\n        www.flaticon.com\n      </a>\n    </span>\n  </div>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport \"./navbar.style.scss\";\n\nexport const Navbar = () => {\n  const match = useLocation();\n\n  const getFeedId = () => {\n    if (\n      match &&\n      match.pathname &&\n      match.pathname.split(\"/\").length > 1 &&\n      match.pathname.split(\"/\")[2]\n    ) {\n      return match.pathname.split(\"/\")[2];\n    }\n    return null;\n  };\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        {getFeedId() && (\n          <li>\n            <Link to={`/feed/${getFeedId()}/edit`}>Edit Feed</Link>\n          </li>\n        )}\n        <li>\n          <Link to=\"/create\">Create Feed</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","import React from \"react\";\n\nimport \"./spinner.styles.scss\";\n\nconst Spinner = () => (\n  <div className=\"spinner-overlay\">\n    <div className=\"spinner-container\"></div>\n  </div>\n);\n\nexport default Spinner;\n","export const formatDate = (dateString: string) => {\n  try {\n    const d = new Date(dateString);\n    return d.getDate() + \".\" + (d.getMonth() + 1) + \".\" + d.getFullYear();\n  } catch (err) {\n    console.error(\"Could not parse date: \", err);\n    return dateString;\n  }\n};\n","import React from \"react\";\nimport \"./card.style.scss\";\nimport { formatDate } from \"../../utils/date.utils\";\nimport { FeedMessage } from \"../../types/message\";\n\ntype Props = {\n  message: FeedMessage;\n};\n\nexport const Card = (props: Props) => {\n  return (\n    <a\n      className=\"card-container\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={props.message.link}\n    >\n      <div className=\"feed-name\">{props.message.feed_name}</div>\n      <h2>{props.message.title}</h2>\n      <div className=\"card-meta\">\n        <span>{props.message.author}</span>\n        <span>{formatDate(props.message.published)}</span>\n      </div>\n      <p dangerouslySetInnerHTML={{ __html: props.message.summary }}></p>\n    </a>\n  );\n};\n","import React from \"react\";\nimport { Card } from \"../card/card.component\";\n\nimport { FeedMessage } from \"../../types/message\";\n\nimport \"./card-list.style.scss\";\nexport const CardList = (props: { news: FeedMessage[] }) => {\n  return (\n    <div className=\"card-list\">\n      {props.news.map((message: any) => {\n        return <Card key={message.link} message={message} />;\n      })}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./search-box.style.scss\";\n\ntype Props = {\n  placeholder: string;\n  handleSearch: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const SearchBox = (props: Props) => {\n  return (\n    <div>\n      <input\n        className=\"search\"\n        type=\"search\"\n        placeholder={props.placeholder}\n        onChange={props.handleSearch}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./custom-button-styles.scss\";\n\nexport const CustomButton: React.FC<React.ButtonHTMLAttributes<\n  HTMLButtonElement\n>> = ({ children, ...props }) => (\n  <button className=\"custom-button\" {...props}>\n    {children}\n  </button>\n);\n","import { Component } from \"react\";\nimport { MultiSelect } from \"react-multi-select-component\";\nimport Spinner from \"../with-spinner/spinner.component\";\nimport { CardList } from \"../card-list/card-list.component\";\nimport { SearchBox } from \"../search-box/search-box\";\nimport { CustomButton } from \"../custom-button/custom-button.component\";\n\nimport { getServerUrl } from \"../../utils/server.utils\";\n\nimport { FeedMessage } from \"../../types/message\";\n\nimport \"./feed.style.scss\";\n\ntype Props = {\n  match?: any;\n};\n\ntype State = {\n  news: FeedMessage[];\n  filtered: FeedMessage[];\n  searchField: string;\n  isLoading: boolean;\n  allSources: { label: string; value: string }[];\n  selectedSources: { label: string; value: string }[];\n  title: string | null;\n  description: string | null;\n};\n\nclass Feed extends Component<Props, State> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      news: [],\n      filtered: [],\n      searchField: \"\",\n      allSources: [],\n      selectedSources: [],\n      title: null,\n      description: null,\n    };\n  }\n\n  loadData = () => {\n    this.setState({\n      isLoading: true,\n    });\n    let fetchUrl = null;\n    if (\n      !this.props.match ||\n      !this.props.match.params ||\n      !this.props.match.params.feedId ||\n      this.props.match.params.feedId === \"\" ||\n      this.props.match.params.feedId === \"example\"\n    ) {\n      fetchUrl = `${getServerUrl()}/api/feeds`;\n      console.error(\"No feedId, use default\");\n    } else {\n      fetchUrl = `${getServerUrl()}/api/feeds/${\n        this.props.match.params.feedId\n      }`;\n    }\n    fetch(fetchUrl)\n      .then((response) => response.json())\n      .then((news) =>\n        this.setState({\n          isLoading: false,\n          news: news[\"entries\"],\n          allSources: news[\"sources\"].map((source: string) => {\n            return {\n              label: source,\n              value: source.toLowerCase(),\n            };\n          }),\n          description: news[\"description\"],\n          title: news[\"title\"],\n        })\n      )\n      .catch((err) => {\n        this.setState({\n          isLoading: false,\n        });\n        console.error(err);\n      });\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  handleSearch = (e: any) => {\n    this.setState({\n      searchField: e.target.value,\n    });\n  };\n\n  handleSelect = (selected: any[]) => {\n    this.setState({\n      selectedSources: selected,\n    });\n  };\n\n  // FIXME(TO): This should be refactored soon.\n  getFilteredResults = () => {\n    const { news, searchField, selectedSources } = this.state;\n    if (!searchField && selectedSources.length === 0) {\n      return news;\n    }\n\n    const selectedFeeds = selectedSources.map((source) => source.value);\n\n    if (!searchField) {\n      return news.filter((message: FeedMessage) =>\n        selectedFeeds.includes(message.feed_name.toLowerCase())\n      );\n    }\n\n    if (selectedSources.length === 0) {\n      return news.filter((message: FeedMessage) => {\n        return (\n          message.title.toLowerCase().includes(searchField.toLowerCase()) ||\n          message.feed_name.toLowerCase().includes(searchField.toLowerCase())\n        );\n      });\n    }\n\n    return news.filter((message: FeedMessage) => {\n      return (\n        (message.title.toLowerCase().includes(searchField.toLowerCase()) ||\n          message.feed_name\n            .toLowerCase()\n            .includes(searchField.toLowerCase())) &&\n        selectedFeeds.includes(message.feed_name.toLowerCase())\n      );\n    });\n  };\n\n  render() {\n    if (this.state.isLoading) {\n      return <Spinner />;\n    }\n    const filtered = this.getFilteredResults();\n    return (\n      <div className=\"feed\">\n        <h1 className=\"feed-title\">{this.state.title || \"News Me\"}</h1>\n        {this.state.description && (\n          <p className=\"feed-description\">{this.state.description}</p>\n        )}\n        <div className=\"filters\">\n          <SearchBox\n            placeholder=\"Search news..\"\n            handleSearch={this.handleSearch}\n          />\n          <MultiSelect\n            options={this.state.allSources}\n            value={this.state.selectedSources}\n            onChange={this.handleSelect}\n            labelledBy={\"Select\"}\n            overrideStrings={{\n              selectSomeItems: \"Select feeds ...\",\n              allItemsAreSelected: \"All feeds are selected.\",\n              selectAll: \"Select All\",\n              search: \"Search\",\n            }}\n          />\n        </div>\n        <CustomButton onClick={() => this.loadData()}>\n          <div className=\"icon-reload cursor\"></div>\n        </CustomButton>\n        <CardList news={filtered} />\n      </div>\n    );\n  }\n}\n\nexport default Feed;\n","export const getServerUrl = () => {\n  if (process.env.NODE_ENV === \"production\") {\n    return \"https://news-me-backend.herokuapp.com\";\n  } else {\n    return \"http://localhost:5000\";\n  }\n};\n","import { useState, useEffect } from \"react\";\nimport { withRouter } from \"react-router\";\n\nimport \"./upsert-feed.style.scss\";\nimport { CustomButton } from \"../custom-button/custom-button.component\";\nimport { getServerUrl } from \"../../utils/server.utils\";\n\ninterface UpsertProps {\n  history: any;\n  match?: any;\n}\n\nconst UpsertFeed: React.FC<UpsertProps> = (props: UpsertProps) => {\n  const [feeds, setFeeds] = useState(\"\");\n  const [feedTitle, setFeedTitle] = useState(\"\");\n  const [feedDescription, setFeedDescription] = useState(\"\");\n\n  useEffect(() => {\n    if (props.match.params.feedId) {\n      getData(props.match.params.feedId);\n    } else {\n      setFeeds(\"\");\n      setFeedDescription(\"\");\n    }\n  }, [props.match.params.feedId]);\n\n  const handleChange = (e: any) => {\n    setFeeds(e.target.value);\n  };\n\n  const handleFeedDescriptionChange = (e: any) => {\n    setFeedDescription(e.target.value);\n  };\n\n  const handleFeedTitleChange = (e: any) => {\n    setFeedTitle(e.target.value);\n  };\n\n  const getData = (feedId: string) => {\n    fetch(`${getServerUrl()}/api/feeds/sources/${feedId}`, {\n      method: \"GET\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setFeeds(data.feeds.join(\",\"));\n        setFeedDescription(data.description || \"\");\n        setFeedTitle(data.title || \"\");\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  const upsertData = () => {\n    let url = `${getServerUrl()}/api/feeds/sources`;\n    if (props.match.params.feedId) {\n      url += `/${props.match.params.feedId}`;\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        feeds: feeds,\n        description: feedDescription,\n        title: feedTitle,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => props.history.push(`/feed/${data.feed_id}`))\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <div className=\"upsert-feed\">\n      <h1>{props.match.params.feedId ? \"Update Feed\" : \"Create Feed\"}</h1>\n      <label className=\"note\">Feed title (optional)</label>\n      <input onChange={handleFeedTitleChange} value={feedTitle} />\n      <label className=\"note\">Feed description (optional)</label>\n      <textarea\n        onChange={handleFeedDescriptionChange}\n        rows={4}\n        value={feedDescription}\n      />\n      <p className=\"note\">\n        Comma separated list of rss feeds. Save the resulting link to get back\n        your feed any time.\n      </p>\n      <textarea onChange={handleChange} rows={10} value={feeds} />\n      <CustomButton onClick={() => upsertData()}>Save</CustomButton>\n    </div>\n  );\n};\n\nexport default withRouter(UpsertFeed);\n","import React, { Component } from \"react\";\nimport Footer from \"./components/footer/footer.component\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { FeedMessage } from \"./types/message\";\n\nimport \"./App.scss\";\nimport { Navbar } from \"./components/navbar/navbar.component\";\nimport Feed from \"./components/feed/feed.component\";\nimport UpsertFeed from \"./components/upsert-feed/upsert-feed.component\";\n\ntype State = {\n  news: FeedMessage[];\n  filtered: FeedMessage[];\n  searchField: string;\n  isLoading: boolean;\n  allSources: { label: string; value: string }[];\n  selectedSources: { label: string; value: string }[];\n};\n\nclass App extends Component<{}, State> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/create\">\n            <UpsertFeed />\n          </Route>\n          <Route\n            path=\"/feed/:feedId/edit\"\n            render={({ match }) => <UpsertFeed {...match} />}\n          ></Route>\n          <Route\n            path=\"/feed/:feedId\"\n            render={({ match }) => <Feed match={match} />}\n          />\n          <Route path=\"/\" render={() => <Feed match={null} />} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}